buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.5.RELEASE'
        junitPlatformVersion = '1.3.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.2.0")
	}
}
plugins {
    id 'org.hidetake.swagger.generator' version '2.13.0'
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'


group = 'pj'
version = '1.0.0'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

configurations {
    ktlint
}

repositories {
	mavenCentral()
	jcenter()
    maven { url "https://dl.bintray.com/spekframework/spek-dev" }
    maven { url 'https://jitpack.io' }
}

swaggerSources {
    saari {
        inputFile = file('swagger.yaml')
    }
}

task reDocUiWrapper(type: GenerateReDoc) {
    println "Executing ReDoc UI Generation"
    wipeOutputDir = true
    inputFile = file('src/main/resources/swagger.yaml')
}

task swaggerUiWrapper(type: GenerateSwaggerUI) {
    println "Executing Swagger UI Generation"
    wipeOutputDir = true
    inputFile = file('src/main/resources/swagger.yaml')
}

bootRun {
    doFirst {
        tasks.swaggerUiWrapper.exec()
        tasks.reDocUiWrapper.exec()
    }
}

bootJar {
    doFirst {
        tasks.swaggerUiWrapper.exec()
        tasks.reDocUiWrapper.exec()
    }
}

processResources {
    from ('build/swagger-ui/') {
        into 'static'
    }
    from ('build/redoc/') {
        into 'static/redoc/'
    }
}


dependencies {
	swaggerUI 'org.webjars:swagger-ui:3.10.0'
    ktlint "com.github.shyiko:ktlint:0.23.1"
	implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation('io.github.cdimascio:swagger-spring-functional:0.8.3')
    implementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.1.1')
    implementation 'com.beust:klaxon:3.0.5'
    implementation 'com.github.jkcclemens:khttp:0.1.0'
    testImplementation ('org.spekframework.spek2:spek-dsl-jvm:2.0.0')  {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly ('org.spekframework.spek2:spek-runner-junit5:2.0.0') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    // spek requires kotlin-reflect
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile "io.strikt:strikt-core:0.15.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
/** For testing */
junitPlatform {
    filters {
        engines {
            include 'spek2', 'junit'
        }
    }
}
sourceSets.test.java.srcDirs += 'src/test/kotlin'
